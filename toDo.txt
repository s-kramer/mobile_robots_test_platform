SK 30.07.2013 23:00
+dodać zależność gradient climbing force od zmiennej s (co oznacza zmienna s, jak ją interpretować, jak ją zaimplementować?)
+implementacja klasy Distribution zarządzającej siłami z Controllera w celu uzyskania żądanych (dynamicznie zmieniających się) zachowań grupy.

SK 12.05.2013 00:30
+ POPRAWIĆ WYŚWIETLANIE!
DONE sprawdzić sterowanie w gradient law

SK 30.04.2013 10:30,02.05.2013 21:30
DONE zmienić from i to w forceParams
DONE dodać możliwość wyboru regulacji (ciągła, 3-etapowa)
+ poprawić dodawanie robotów do tablicy robots w funkcji inversePower->update

DONE+ zmiana funkcji addRobot w World - aktualna postać nie pozwala na dodawanie robotów z różnych grup jednocześnie
DONE+ zmienić parametry step, oraz tolError 
+ zmienić struktury z parametrami o na klasy (możliwość tworzenia jednolitych struktur, deklaracji domyślnych parametrów)
+ poprawić funkcję windowUpdate tak, aby można było dynamicznie zwiększać ilość wyświetlanych grup i określać sposób wyświetlania robotów z nowej grupy. Konieczne jest zmienianie wymiaru uchwytu do wykresu (jak to zrobić? Aktualnie wymiar 3x1 deklarowany jest przy tworzeniu instancji World.). Aktualny sposób - zmiana danych xdata, ydata..., umożliwia utrzymywanie zbliżenia na wybrany obszar wykresu podczas uaktualniania danych. Poza tym jedyną potrzebną modyfikacją byłoby zmienianie wymiaru uchwytu do plota.
DONE zmiana dystansu(kąta) do którego zbiega robot w etapie 2(1)
DONE +sprawdzanie d - odległości w equlibrum (2 elementy inverse force)
+testy parametrów sig i c dla różnych zachowań
POPRAWIĆ+stały krok generowany przez siłę  - dodać  zależność od d z artykułu
DONE-minus przy c1


SK 27.04.2013 00:30
+ World: zmiana kropek na plocie na strzałki skierowane zgodnie z parametrem fi robota
+ World, Robot: usunięcie struktury position, powinniśmy korzystać tylko ze struktury state (position rozszerzonej o kąt fi)
DONE+ Robot: dodać obliczanie kierunku ruchu na podstawie sumy siły (tg (Fy/Fx)), %zatrzymanie robota i obrót, potem krok z zadanym v, 
DONE + Robot: dodać regulator (uchyb jako błąd orientacji robota, prędkość ruchu: zmienna (2 poziomowa), lub regulacja 3-fazowa)

DONE InversePower: testy działania
+ Regulator: dobrać odpowiednie nastawy dla regulacji kata i prędkości liniowej na podstawie identyfikacji modelu

SK  25.04.2013 22:57
DONE+ implementacja przekazywania uchwytu do rodzica do klasy. Wykorzystanie do przekazywania tablicy robotów do agentów do wyliczania sił
DONE+ implementacja regulatora dla robotów w celu nadążania za zmianami trajektorii
DONE\NIEPOTRZEBNE+ ograniczenie częstotliwości iteracji odświeżania sił działających na roboty do dużo mniejszej od częstotliwości updateów stanu robota
DONE+ implementacja kierunku sterowania z sumy sił działających na roboty F jako tg(Fy/Fx), o kroku ~|F|
DONE+ znaczniki toDo z kodu
